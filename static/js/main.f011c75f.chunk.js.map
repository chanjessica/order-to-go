{"version":3,"sources":["setupFirebase.js","NotFound.js","menuEntries.js","checkout.js","menu.js","home.js","login.js","logout.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","NotFound","db","firestore","MenuEntries","state","isSignedIn","entries","buyIt","item","e","console","log","auth","currentUser","uid","signedIn","setState","preventDefault","collection","doc","add","orderDate","Date","dish","price","this","unsubscribe","onSnapshot","snapshot","docs","listItems","map","entry","key","id","data","onClick","type","className","React","Component","Checkout","checkout","profile","deleteOrder","delete","placeOrder","cost","alert","unregisterAuthObserver","onAuthStateChanged","user","props","history","reduce","total","parseFloat","toFixed","Menu","data-ride","data-target","data-slide-to","src","alt","href","data-slide","uiConfig","signInFlow","signInSuccessUrl","signInOptions","EmailAuthProvider","PROVIDER_ID","Login","firebaseAuth","logout","signOut","Links","exact","to","App","path","component","Home","Logout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f011c75f.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n// Required for side-effects\r\nimport 'firebase/firestore';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\r\n});\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n\r\n    return (\r\n        <h1>Page Not Found!  Please contact your Administrator</h1>\r\n    )\r\n\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport firebase from 'firebase';\r\n\r\nconst db = firebase.firestore();\r\n\r\n// db.collection('journalEntries').doc('yY1FbU9zMJI4elJPFfAN').update({ name: '' })\r\n// const newValue = prompt('What is your entry?', 'default value');\r\n\r\nexport default class MenuEntries extends React.Component {\r\n\r\n    state = {\r\n        isSignedIn: false,\r\n        entries: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unsubscribe = db.collection('foodToGo')\r\n            .onSnapshot(snapshot => { this.setState({ entries: snapshot.docs }); });\r\n    }\r\n    componentWillUnmount() {\r\n        if (this.unsubscribe) {\r\n            this.unsubscribe();\r\n        }\r\n    }\r\n\r\n    buyIt = (item) => (e) => {\r\n        console.log(firebase.auth().currentUser.uid);\r\n\r\n        const signedIn = firebase.auth().currentUser.uid != null ? true : false;\r\n\r\n        this.setState({ isSignedIn: signedIn });\r\n        console.log(signedIn);\r\n\r\n        console.log(item);\r\n        e.preventDefault();\r\n        const uid = firebase.auth().currentUser.uid;\r\n\r\n        console.log(uid);\r\n\r\n        db.collection('clients').doc(uid)\r\n            .collection('foodToGo').add({\r\n                orderDate: new Date(),\r\n                dish: item.dish,\r\n                price: item.price\r\n            })\r\n    }\r\n\r\n    render() {\r\n        // this.state.entries.map(entry => console.log(entry.data()));  //return array \r\n        console.log(this.state.isSignedIn);\r\n\r\n\r\n        const listItems = this.state.entries.map(entry =>\r\n            <tr key={entry.id}>\r\n                <td> {entry.data().dish} </td>\r\n                <td> ${entry.data().price}</td>\r\n                {/* {this.state.isSignedIn && */}\r\n                <td>  <button onClick={this.buyIt(entry.data())} type=\"submit\">order it</button> </td>\r\n                {/* } */}\r\n            </tr>);\r\n\r\n        return (\r\n            <table className=\"table table-striped\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>Entry</th>\r\n                        <th>Price</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {listItems}\r\n                </tbody>\r\n            </table >\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport firebase from 'firebase';\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default class Checkout extends React.Component {\r\n    state = {\r\n        isSignedIn: false,\r\n        uid: ' ',\r\n        checkout: [],\r\n        profile: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\r\n            user => {\r\n                this.setState({ isSignedIn: !!user });\r\n                console.log(this.state.isSignedIn);\r\n                console.log(user);\r\n                console.log(this.props.history);\r\n                if (user) {\r\n                    this.setState({ uid: firebase.auth().currentUser.uid });\r\n                    console.log(this.state.uid);\r\n\r\n                    this.unsubscribe = db\r\n                        .collection('clients')\r\n                        .doc(this.state.uid)\r\n                        // .doc('c1sbmzh62uhSP8ChIeDlIehj7Va2')\r\n                        .collection('foodToGo')\r\n                        .onSnapshot(snapshot => { this.setState({ checkout: snapshot.docs }); });\r\n                }\r\n                // else {\r\n                //     this.props.history.push('/')\r\n                // }\r\n            }\r\n        );\r\n    }\r\n\r\n    deleteOrder = (id) => (e) => {\r\n        console.log(id);\r\n        e.preventDefault();\r\n\r\n        db.collection('clients')\r\n            .doc(this.state.uid)\r\n            // .doc('c1sbmzh62uhSP8ChIeDlIehj7Va2')\r\n            .collection('foodToGo')\r\n            .doc(id)\r\n            .delete();\r\n    }\r\n\r\n    placeOrder = (cost) => (e) => {\r\n        alert(`total cost ${cost}`);\r\n        e.preventDefault();\r\n        // return (e) => {\r\n        //     alert(`total cost ${cost}`);\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        console.log(firebase.auth().currentUser);\r\n        console.log(this.state.checkout);\r\n\r\n        const listItems = this.state.checkout.map(entry =>\r\n            <li key={entry.id}>\r\n                {entry.data().dish}    ${entry.data().price}\r\n                <button onClick={this.deleteOrder(entry.id)} type=\"button\" className=\"btn-info btn-xs float-right\"> Remove</button>\r\n            </li>\r\n        );\r\n\r\n        const cost = this.state.checkout.reduce((total, entry) => parseFloat(total) + parseFloat(entry.data().price), 0).toFixed(2);\r\n\r\n        return (\r\n            <>\r\n                <h4>Your Cart:</h4>\r\n                <ol>\r\n                    {listItems}\r\n                </ol>\r\n                <div className=\"total\">\r\n                    <h5>Total = ${cost}\r\n                        <button onClick={this.placeOrder(cost)} type=\"button\" className=\"btn btn-xs btn-warning float-right\">Place Order</button></h5>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport MenuEntries from './menuEntries';\r\nimport Checkout from './checkout';\r\nimport firebase from 'firebase';\r\n\r\nexport default class Menu extends React.Component {\r\n    // console.log(this.props);\r\n\r\n    render() {\r\n        // console.log(MenuEntries.orderArray);\r\n        console.log(firebase.auth().currentUser);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h1>Select From the Menu</h1>\r\n                    <div className=\"col-md-8\"><MenuEntries /></div>\r\n                    {/* <div className=\"col-md-4\"> <Checkout data={MenuEntries.orderArray} /></div> */}\r\n                    <div className=\"col-md-4\">\r\n                        <Checkout />\r\n                        {/* {isSignedIn && <Checkout />} */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default () => {\r\n    return (\r\n        <>\r\n            <h2 className=\"mt-4 text-center\">Happy Kitchen</h2>\r\n            <div id=\"food\" className=\"carousel slide   justify-content-center\" data-ride=\"carousel\">\r\n\r\n                <ul className=\"carousel-indicators\">\r\n                    <li data-target=\"#food\" data-slide-to=\"0\" className=\"active\"></li>\r\n                    <li data-target=\"#food\" data-slide-to=\"1\"></li>\r\n                    <li data-target=\"#food\" data-slide-to=\"2\"></li>\r\n                </ul>\r\n                <div className=\"carousel-inner\">\r\n                    <div className=\"carousel-item active justify-content-center\">\r\n                        <img className=\"d-block mx-auto\" src=\"https://lorempixel.com/output/food-q-c-640-480-1.jpg\" alt=\"food 1\" />\r\n                        <div className=\"carousel-caption\">\r\n                            <h3>Kung Po Chicken</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        <img className=\"d-block mx-auto\" src=\"https://lorempixel.com/output/food-q-c-640-480-2.jpg\" alt=\"food 2\" />\r\n                        <div className=\"carousel-caption\">\r\n                            <h3>Mongolian Beef</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        <img className=\"d-block mx-auto\" src=\"https://lorempixel.com/output/food-q-c-640-480-3.jpg\" alt=\"food 3\" />\r\n                        <div className=\"carousel-caption\">\r\n                            <h3>Twice Cooked Pork</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <a className=\"carousel-control-prev text-warning\" href=\"#food\" data-slide=\"prev\">\r\n                    <span className=\"carousel-control-prev-icon\"></span>\r\n                </a>\r\n                <a className=\"carousel-control-next text-warning\" href=\"#food\" data-slide=\"next\">\r\n                    <span className=\"carousel-control-next-icon\"></span>\r\n                </a>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from 'firebase';\r\n// import { render } from '@testing-library/react';\r\n\r\nconst uiConfig = {\r\n    signInFlow: 'popup',\r\n    signInSuccessUrl: '/menu',\r\n    signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID]\r\n}\r\n\r\nexport default class Login extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1> Please Login  </h1>\r\n                <p> Sign In:</p>\r\n                <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport firebase from 'firebase';\r\n\r\nfunction logout() {\r\n    console.log(firebase.auth().currentUser);\r\n    firebase.auth().signOut();\r\n    console.log(firebase.auth().currentUser);\r\n\r\n    return (\r\n        <div>successful logout</div>\r\n    )\r\n}\r\n\r\nexport default logout;\r\n\r\n\r\n\r\n\r\n","// import firebase from 'firebase';\nimport React from 'react';\n// import { BrowserRouter as Router, Route, NavLink, Switch } from 'react-router-dom';\nimport { HashRouter as Router, Route, NavLink, Switch } from 'react-router-dom';\nimport './App.css';\nimport NotFound from './NotFound';\nimport Menu from './menu';\nimport Home from './home';\nimport Login from './login';\nimport Logout from './logout';\n\n// const firestore = firebase.firestore();\n// firestore\n//   .collection('foodToGo')\n//   .onSnapshot(\n//     snapshot => console.log(\n//       snapshot.docs.map(doc => doc.data())\n//     ),\n//     err => console.log(err)\n//   );\n\nconst Links = () => (\n  <div className=\"nav\">\n    <ul>\n      <li><NavLink exact to=\"/\">Home</NavLink></li>\n      <li><NavLink to=\"/menu\">Menu</NavLink></li>\n      <li><NavLink to=\"/login\">Login</NavLink></li>\n      <li><NavLink to=\"/logout\">Logout</NavLink></li>\n    </ul>\n  </div>\n);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <header className=\"App-header\"> <Links />\n        </header>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/logout\" component={Logout} />\n          <Route exact path=\"/menu\" component={Menu} />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </Router>\n    </div >\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './setupFirebase';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}